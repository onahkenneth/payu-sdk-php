;## This is an example configuration file for the SDK.
;## The sample scripts configure the SDK dynamically
;## but you can choose to go for file based configuration
;## in simpler apps (See bootstrap.php for more).
[Account]
acct1.username = "100032"
acct1.password = "PypWWegU"
acct1.safekey = "{CE62CE80-0EFD-4035-87C1-8824C5C46E7F}"
acct1.storeName = "3D Sim Store FAuth Off Force On"
acct1.paymentMethods = CREDITCARD
acct1.fraudManagement = false

acct2.username = "Staging Integration Store 3"
acct2.password = "WSAUFbw6"
acct2.safekey = "{07F70723-1B96-4B97-B891-7BF708594EEA}"
acct2.storeName = "Staging Integration Store 3"
acct2.paymentMethods = "CREDITCARD,EBUCKS,EFT_PRO,DISCOVERYMILES"
acct2.fraudManagement = false

;Connection Information
[Http]
; Add SOAPClient Constants to be configured
; The settings provided in configurations would override defaults
; if provided in configurations
http.connection_timeout = 60
http.retry = 1

;http.headers.PayU-Resource-Id = 123123123
;http.proxy_host = hostname
;http.proxy_port = port
;http.proxy_login = username
;http.proxy_password = password

;Service Configuration
[Service]
; can be set to sandbox / live
mode = sandbox
service.EndPoint="https://staging.payu.co.za/service/PayUAPI"
; Uncomment this line for integrating with the live endpoint
; service.EndPoint="https://secure.payu.co.za/service/PayUAPI"

;Logging Information
[Log]
; For custom logging implementation, you can set the
; logging factory provider class here.
; The class should be implementing \PayU\Log\PayULogFactory.
; If this is not set, it will default to \PayU\Log\PayUDefaultLogFactory.
;log.AdapterFactory=\PayU\Log\PayUDefaultLogFactory

; Settings for PayUDefaultLogFactory
log.LogEnabled = true

; When using a relative path, the log file is created
; relative to the .php file that is the entry point
; for this request. You can also provide an absolute
; path here
; Settings for PayUDefaultLogFactory
log.FileName = ../PayU.log

; Logging level can be one of any provided at \Psr\Log\LogLevel
; Logging is most verbose in the 'DEBUG' level and
; decreases as you proceed towards ERROR
; DEBUG level is disabled for live, to not log sensitive information.
; If the level is set to DEBUG, it will be reduced to INFO automatically
log.LogLevel = DEBUG

;Validation Configuration
[validation]
; If validation is set to strict, the PayPalModel would make sure that
; there are proper accessors (Getters and Setters) for each model
; objects. Accepted value is
; 'log'     : logs the error message to logger only (default)
; 'strict'  : throws a php notice message
; 'disable' : disable the validation
validation.level=strict
